#include <iostream>
#include<queue>
#include<string>
using namespace std;
class node{

   public:
    int data;
    node *left;
    node *right;

    node(int d){
        data=d;
        left=NULL;
        right=NULL;
    }
};


void buildTree(node *&root){
  string a,b;
  int data;
  cin>>data;
  root=new node(data);

  cin>>a;
  if(a=="true"){
      buildTree(root->left);
  }
  
  cin>>b;
  if(b=="true"){
      buildTree(root->right);
  }

  if(a=="false" || b=="false"){
      return;
  }
}

void levelorder(node *root){
  queue<node *> q;
  q.push(root);
  q.push(NULL);

  while(!q.empty()){
      node *f=q.front();

      if(f==NULL){
          q.pop();
          cout<<endl;
          if(!q.empty()){
              q.push(NULL);
          }
      }
      else{
          q.pop();
          cout<<f->data<<" ";
          if(f->left){
              q.push(f->left);
          }
          if(f->right){
              q.push(f->right);
          }
      }
  }
}

int main() {
    
    node *root=NULL;
    buildTree(root);
    levelorder(root);
    return 0;
}