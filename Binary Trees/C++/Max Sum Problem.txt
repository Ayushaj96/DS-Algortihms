#include <iostream>
using namespace std;

class node{

   public:
    int data;
    node *left;
    node *right;

    node(int d){
        data=d;
        left=NULL;
        right=NULL;
    }
};

class SumPair{
    public:
    int inc;
    int exc;
};

node *buildTree(){
  int data;
  cin>>data;

  if(data==-1){
      return NULL;
  }

  node *n=new node(data);
  n->left=buildTree();
  n->right=buildTree();
  return n;
}

SumPair maxSumPairProblem(node *root){
      SumPair p;
      if(root==NULL){
          p.inc=0;
          p.exc=0;
          return p;
      }

      SumPair left=maxSumPairProblem(root->left);
      SumPair right=maxSumPairProblem(root->right);

      p.inc = root->data + left.exc + right.exc;
      p.exc = max(left.inc,left.exc) + max(right.inc,right.exc);
      return p;
}

int main() {
    
      node *root=NULL;
      root=buildTree();

      SumPair p = maxSumPairProblem(root);                //we get a pair of inc and exc
      int ans = max(p.inc,p.exc);
      cout<<"\n Max Sum Problem is : "<<ans; 
}