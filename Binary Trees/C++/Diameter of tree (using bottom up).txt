#include <iostream>
using namespace std;

class node{

   public:
    int data;
    node *left;
    node *right;

    node(int d){
        data=d;
        left=NULL;
        right=NULL;
    }
};

class myPair{
    public :
    int height;
    int diameter;
};

node *buildTree(){
  int data;
  cin>>data;

  if(data==-1){
      return NULL;
  }

  node *n=new node(data);
  n->left=buildTree();
  n->right=buildTree();
  return n;
}

myPair Fastdiameter(node *root){
    myPair p;

//NULL Tree
    if(root==NULL){
       p.diameter=0;
       p.height=0;
       return p;
    }

    // here here O(n)
    myPair left=Fastdiameter(root->left);
    myPair right=Fastdiameter(root->right);

   // from here it takes O(1) time
    int d1=left.diameter;
    int d2=right.diameter;

    int h1=left.height;
    int h2=right.height;

    p.diameter=max(h1+h2,max(d1,d2));
    p.height=max(h1,h2)+1;
    return p;

    //so total it takes O(n) time
}

int main() {
    
      node *root=NULL;
      root=buildTree();

      cout<<" \n Diameter : "<<Fastdiameter(root).diameter<<endl;
}

