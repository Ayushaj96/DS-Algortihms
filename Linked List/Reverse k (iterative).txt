#include <iostream>
using namespace std;
class node{
    public:
    int data;
    node *next;
    
    node(int d){
        data=d;
        next=NULL;
    }
};

void insertAtEnd(node *&head,int data){
    if(head==NULL){
        head=new node(data);
		return;
    }
    
    node *tail=head;
    while(tail->next!=NULL){
        tail=tail->next;
    }
    
    node *n=new node(data);
    n->next=NULL;
    tail->next=n;
     return;   
}

void buildNodes(node *&head,int n){
    int data;

    while(n!=0){
        cin>>data;
        insertAtEnd(head,data);
        n--;
    }
}

void print(node *head){           
    node *temp=head;
    
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

void reverse(node *&head,int l){
    int i=0;
    int j=l-1;
    
    node *p,*q;
    p=head;
    q=head;
    while(i<j){
        int k=0;
        while(k<j){
            q=q->next;
            k++;
        }
        swap(p->data,q->data);
        i++;
        j--;
        p=p->next;
        q=head;
    }
}

int length(node *head){
    
    if(head==NULL){
        return 0;
    }
    
    int count = 0;
    while(head!=NULL){
      head=head->next;
      count++;
    }   
    return count;
}
int main() {
    
     int t;
     cin>>t;
    
    for(int i=0;i<t;i++){
    node *head=NULL;
    int n,k,m;
    cin>>n;
    
    buildNodes(head,n);
    cin>>k;
    node *temp=head;
     
    
    while(temp!=NULL){
        
      if(length(temp)>=k){
        m=k;
        reverse(temp,k);
          while(m!=0){
           temp=temp->next;
           m--;
          }
       }
       else{
        reverse(temp,length(temp)); 
        while(temp!=NULL){
            temp=temp->next;
        }
       }
    }
    
    print(head);
   }
    return 0;
}
