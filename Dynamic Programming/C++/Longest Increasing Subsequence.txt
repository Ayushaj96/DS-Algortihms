#include <iostream>
using namespace std;
int lis(int *arr,int n){
     int dp[100];

     //base case
     for(int i=0;i<n;i++) dp[i] = 1;

     int best=-1;
     for(int i=1;i<n;i++){
         for(int j=0;j<i;j++){
             if(arr[j]<=arr[i]){
                 //jth element can be absorbed by ith element
                 int length = 1 + dp[j];
                 dp[i] = max(dp[i],length);
             }
         }
         best = max(best,dp[i]);
     }

     cout<<"Longest Increasing subsequence : ";
     int count=1;
     for(int i=0;i<n;i++){
         if(dp[i]==count){
             cout<<arr[i]<<" ";
             count++;
         }
     }
     
     return best;
}

int main() {
    int n;
    cin>>n;
    int arr[n];

    for(int i=0;i<n;i++) cin>>arr[i];
    
    int ans = lis(arr, n);
    cout<<"\nLength : ";
    cout<<ans;
}
