#include <iostream>
using namespace std;
//memoization
int memo[1000];
int catalans_recurrence(int n){
  if(n==0){
      return 1;
  }

  if(memo[n]!=0) return memo[n];

  for(int i=1;i<=n;i++){
      memo[n] = memo[n] + catalans_recurrence(i-1)*catalans_recurrence(n-i);
  }

  return memo[n];
}

//using formula
int fact(int n){
    int *dp=new int[n+1];
    dp[0] = 1;

    for(int i=1;i<=n;i++){
        dp[i] = i * dp[i-1];
    }
    return dp[n];
}

int catalans_using_formula(int n){
      int ans=0;
      ans = fact(2*n)/(fact(n)*fact((2*n)-n)*(n+1));
      return ans;
}

int main() {
    int n;
    cin>>n;
    //memoization
    fill(memo,memo+n,0);
    for(int i=0;i<=n;i++){
       cout<<catalans_recurrence(i)<<" ";
    }
    cout<<endl;

    //using formula
    for(int i=0;i<=n;i++){
       cout<<catalans_using_formula(i)<<" ";
    }
}
