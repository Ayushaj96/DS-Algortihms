#include <iostream>
using namespace std;
class node{

   public:
    int data;
    node *left;
    node *right;

    node(int d){
        data=d;
        left=NULL;
        right=NULL;
    }
};


node *buildTree(){
  int data;
  cin>>data;

  if(data==-1){
      return NULL;
  }
  node *n=new node(data);
  n->left=buildTree();
  n->right=buildTree();
  return n;
}

int height(node *root){
    if(root==0){
        return 0;
    }

    int lh=height(root->left);
    int rh=height(root->right);
    return max(lh,rh) +1;
}

int diameter(node *root){
    if(root==NULL){
        return 0;
    }

    int opt1=height(root->left) + height(root->right);
    int opt2=diameter(root->left);
    int opt3=diameter(root->right);

    return max(opt1,max(opt2,opt3));
}

void printPreorder(node *root){
    if(root==NULL){
        return;
    }
    cout<<root->data<<" , ";
    printPreorder(root->left);
    printPreorder(root->right);
}


int main() {
    node *root=NULL;
    root=buildTree();
    printPreorder(root);
    cout<<"\n Diameter : "<<diameter(root);
}
