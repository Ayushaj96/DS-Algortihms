#include <iostream>
#include <functional>
#include <vector>
#include <queue>
using namespace std;
class car{
    public:
    int x;
    int y;
    int id;

    car(int id,int x,int y){
        this->id = id;
        this->x = x;
        this->y = y;
    }

    int dist(){
        return x*x + y*y;             //for comparison, sqrt is not considered
    }
    void print(){
        cout<<"ID : "<<id<<"  ";
        cout<<"Location : "<<x<<" , "<<y<<endl;
    }
};

class carcompare{
    public:
    bool operator()(car a,car b){
         return a.dist()>b.dist();       //min
    }
};

int main() {
    priority_queue<car,vector<car>,carcompare> pq;

    int x[]={5,6,17,18,9,11,0,3};
    int y[]={1,-2,8,9,10,91,1,2};
    int n=sizeof(x)/sizeof(x[0]);
   // int m=sizeof(y)/sizeof(y[0]);

    for(int i=0;i<n;i++){
        car c(i,x[i],y[i]);
        pq.push(c);
    }

    while(!pq.empty()){
        car p=pq.top();
        p.print();
        pq.pop();
    }

}
